{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/ayers/Documents/Nology/React/Book Challenge/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/ayers/Documents/Nology/React/Book Challenge/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/ayers/Documents/Nology/React/Book Challenge/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import Card from\"../../components/Card\";import{useState,useEffect}from\"react\";import styles from\"./CardList.module.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CardList=function CardList(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),books=_useState2[0],setBooks=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),query=_useState4[0],setQuery=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),input=_useState6[0],setInput=_useState6[1];var handleChange=function handleChange(event){setInput(event.target.value);};var getBooks=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(query){var response,books;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://books.googleapis.com/books/v1/volumes?q=\".concat(query));case 2:response=_context.sent;_context.next=5;return response.json();case 5:books=_context.sent;setBooks(books);case 7:case\"end\":return _context.stop();}}},_callee);}));return function getBooks(_x){return _ref.apply(this,arguments);};}();var handleClick=function handleClick(){setQuery(input);};// call when string is complete:\nuseEffect(function(query){if(query!==\"\")getBooks(query);},[]);useEffect(function(){if(query!==\"\")getBooks(query);},[query]);var noTitle={title:\"No Title\",authors:\"\",description:\"No book found, try more common phrases or keywords\"};// send object\nif(books){return/*#__PURE__*/_jsxs(\"div\",{style:styles,children:[/*#__PURE__*/_jsxs(\"header\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Find a Book\"}),/*#__PURE__*/_jsx(\"label\",{htmlForfor:\"searchTerms\",children:\"What books are you looking for?\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"searchTerms\",name:\"searchTerms\",onChange:handleChange,style:styles}),/*#__PURE__*/_jsx(\"button\",{onClick:handleClick,children:\"Search\"}),/*#__PURE__*/_jsx(\"em\",{children:\"Click on a book for more info\"})]}),/*#__PURE__*/_jsx(\"div\",{children:books.items?books.items.map(function(each){return/*#__PURE__*/_jsx(Card,{book:each.volumeInfo},each.id);}):/*#__PURE__*/_jsx(Card,{book:noTitle})})]});}};export default CardList;","map":{"version":3,"sources":["C:/Users/ayers/Documents/Nology/React/Book Challenge/src/containers/CardList/CardList.jsx"],"names":["Card","useState","useEffect","styles","CardList","books","setBooks","query","setQuery","input","setInput","handleChange","event","target","value","getBooks","fetch","response","json","handleClick","noTitle","title","authors","description","items","map","each","volumeInfo","id"],"mappings":"kZAAA,MAAOA,CAAAA,IAAP,KAAiB,uBAAjB,CACA,OAAQC,QAAR,CAAkBC,SAAlB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACnB,cAA0BH,QAAQ,CAAC,EAAD,CAAlC,wCAAOI,KAAP,eAAcC,QAAd,eACA,eAA0BL,QAAQ,CAAC,EAAD,CAAlC,yCAAOM,KAAP,eAAcC,QAAd,eACA,eAA0BP,QAAQ,CAAC,EAAD,CAAlC,yCAAOQ,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC5BF,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR,CACH,CAFD,CAIA,GAAMC,CAAAA,QAAQ,0FAAG,iBAAOR,KAAP,2JACUS,CAAAA,KAAK,2DAAoDT,KAApD,EADf,QACPU,QADO,qCAKOA,CAAAA,QAAQ,CAACC,IAAT,EALP,QAKPb,KALO,eAMbC,QAAQ,CAACD,KAAD,CAAR,CANa,sDAAH,kBAARU,CAAAA,QAAQ,4CAAd,CASA,GAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtBX,QAAQ,CAACC,KAAD,CAAR,CACH,CAFD,CAIA;AAEAP,SAAS,CAAC,SAACK,KAAD,CAAW,CACjB,GAAIA,KAAK,GAAK,EAAd,CAAkBQ,QAAQ,CAACR,KAAD,CAAR,CACrB,CAFQ,CAEN,EAFM,CAAT,CAIAL,SAAS,CAAC,UAAM,CACZ,GAAIK,KAAK,GAAK,EAAd,CAAkBQ,QAAQ,CAACR,KAAD,CAAR,CACrB,CAFQ,CAEN,CAACA,KAAD,CAFM,CAAT,CAKA,GAAMa,CAAAA,OAAO,CAAG,CACZC,KAAK,CAAE,UADK,CAEZC,OAAO,CAAE,EAFG,CAGZC,WAAW,CAAE,oDAHD,CAAhB,CAMA;AACA,GAAIlB,KAAJ,CAAW,CACP,mBACI,aAAK,KAAK,CAAEF,MAAZ,wBACI,uCACI,mCADJ,cAEI,cAAO,UAAU,CAAC,aAAlB,6CAFJ,cAGI,cAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,aAAtB,CAAoC,IAAI,CAAC,aAAzC,CAAuD,QAAQ,CAAEQ,YAAjE,CAA+E,KAAK,CAAER,MAAtF,EAHJ,cAII,eAAQ,OAAO,CAAEgB,WAAjB,oBAJJ,cAKI,qDALJ,GADJ,cAQI,qBAEQd,KAAK,CAACmB,KAAN,CACInB,KAAK,CAACmB,KAAN,CAAYC,GAAZ,CAAgB,SAAAC,IAAI,CAAI,CACpB,mBAAO,KAAC,IAAD,EAAoB,IAAI,CAAEA,IAAI,CAACC,UAA/B,EAAWD,IAAI,CAACE,EAAhB,CAAP,CACH,CAFD,CADJ,cAII,KAAC,IAAD,EAAM,IAAI,CAAER,OAAZ,EANZ,EARJ,GADJ,CAoBH,CACJ,CA9DD,CAgEA,cAAehB,CAAAA,QAAf","sourcesContent":["import Card from \"../../components/Card\";\r\nimport {useState, useEffect} from \"react\";\r\nimport styles from \"./CardList.module.scss\";\r\n\r\nconst CardList = () => {\r\n    const [books, setBooks] = useState([]);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [input, setInput] = useState(\"\");\r\n\r\n    const handleChange = (event) => {\r\n        setInput(event.target.value);\r\n    }\r\n\r\n    const getBooks = async (query) => {\r\n        const response = await fetch(`https://books.googleapis.com/books/v1/volumes?q=${query}`);\r\n\r\n        // query will be the text input box value\r\n\r\n        const books = await response.json();\r\n        setBooks(books);\r\n    }\r\n    \r\n    const handleClick = () => {\r\n        setQuery(input);        \r\n    }\r\n\r\n    // call when string is complete:\r\n\r\n    useEffect((query) => {\r\n        if (query !== \"\") getBooks(query);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (query !== \"\") getBooks(query);\r\n    }, [query]);\r\n\r\n    \r\n    const noTitle = {\r\n        title: \"No Title\",\r\n        authors: \"\",\r\n        description: \"No book found, try more common phrases or keywords\"\r\n    }\r\n\r\n    // send object\r\n    if (books) {\r\n        return (\r\n            <div style={styles}>\r\n                <header>\r\n                    <h1>Find a Book</h1>\r\n                    <label htmlForfor=\"searchTerms\">What books are you looking for?</label>\r\n                    <input type=\"text\" id=\"searchTerms\" name=\"searchTerms\" onChange={handleChange} style={styles}/>\r\n                    <button onClick={handleClick}>Search</button>\r\n                    <em>Click on a book for more info</em>\r\n                </header>\r\n                <div>\r\n                    {\r\n                        books.items ?\r\n                            books.items.map(each => {\r\n                                return <Card key={each.id} book={each.volumeInfo} /> \r\n                            }) :\r\n                            <Card book={noTitle} />\r\n                    }\r\n                </div>\r\n            </div>\r\n        );  \r\n    }\r\n};\r\n\r\nexport default CardList;"]},"metadata":{},"sourceType":"module"}